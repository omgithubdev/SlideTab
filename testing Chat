package com.example.om.foodchat;

import android.content.Context;
import android.content.Intent;
import android.content.SharedPreferences;
import android.graphics.Color;
import android.graphics.PorterDuff;
import android.os.Bundle;
import android.support.design.widget.FloatingActionButton;
import android.support.design.widget.Snackbar;
import android.support.v7.app.AppCompatActivity;
import android.support.v7.widget.LinearLayoutManager;
import android.support.v7.widget.RecyclerView;
import android.support.v7.widget.Toolbar;
import android.view.Menu;
import android.view.MenuItem;
import android.view.View;
import android.widget.ProgressBar;

import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.List;

import retrofit.Callback;
import retrofit.RestAdapter;
import retrofit.RetrofitError;
import retrofit.client.Response;
import retrofit.http.Field;
import retrofit.http.GET;
import retrofit.http.POST;
import retrofit.http.Query;

public class ChatHistory extends AppCompatActivity {

    public static final String ENDPOINT = "http://foodinger.in";
    static String phone;
    static String macAddr;
    ArrayList<String> FromNo = new ArrayList<>();
    ArrayList<String> ToNo = new ArrayList<>();
    RecyclerView mRecyclerView;
    ChatHistoryAdapter chatHistoryAdapter;
    ProgressBar progressBar;
    public static ArrayList historyList;

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        try {
            super.onCreate(savedInstanceState);
            setContentView(R.layout.activity_chat_history);
            Toolbar toolbar = (Toolbar) findViewById(R.id.toolbar);
            setSupportActionBar(toolbar);

            progressBar = (ProgressBar) findViewById(R.id.progressBar);
            progressBar.setVisibility(View.VISIBLE);
            LinearLayoutManager vertical = new LinearLayoutManager(this, LinearLayoutManager.VERTICAL, false);
            mRecyclerView = (RecyclerView) findViewById(R.id.chatList);
            mRecyclerView.setLayoutManager(vertical);
            chatHistoryAdapter = new ChatHistoryAdapter(this);
            mRecyclerView.setAdapter(chatHistoryAdapter);

            progressBar.getIndeterminateDrawable().setColorFilter(getResources().getColor(R.color.orange2), PorterDuff.Mode.SRC_IN);

            MainActivity.sharedPreferences = getSharedPreferences(MainActivity.MYPREFERENCES, Context.MODE_PRIVATE);
            if (MainActivity.sharedPreferences.contains(MainActivity.phoneNoInEditor)) {
                if (MainActivity.sharedPreferences.contains(MainActivity.macAddressInEditor)) {
                    System.out.println("Shared:" + MainActivity.sharedPreferences.toString());
                    MainActivity.phoneNo = MainActivity.sharedPreferences.getString(MainActivity.phoneNoInEditor, "");
                    MainActivity.macAddress = MainActivity.sharedPreferences.getString(MainActivity.macAddressInEditor, "");
                    phone = MainActivity.phoneNo;
                    macAddr = MainActivity.macAddress;
                    System.out.println("No:" + phone + "_" + macAddr);
                    getList();
                }
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    @Override
    protected void onResume() {
        super.onResume();
        try {
            if (!MainActivity.sharedPreferences.contains(MainActivity.phoneNoInEditor)) {
                Intent intent = new Intent(ChatHistory.this, MainActivity.class);
                startActivity(intent);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    private void getList() {
        try {
            RestAdapter adapter = new RestAdapter.Builder()
                    .setEndpoint(ENDPOINT)
                    .build();
            ApiInterface api = adapter.create(ApiInterface.class);

            api.getChat(phone, macAddr, new Callback<List<PojoChat>>() {
                @Override
                public void success(List<PojoChat> pojoChats, Response response) {
                    progressBar.setVisibility(View.GONE);
                    if(pojoChats.size()!=0) {
                        updateDisplay(pojoChats);
                    }else {
                        historyList=new ArrayList();
                        Calendar c1=Calendar.getInstance();
                        SimpleDateFormat sdf=new SimpleDateFormat("yyyy-MM-dd");
                        String strDate=sdf.format(c1.getTime());
                        SimpleDateFormat sdfTime=new SimpleDateFormat("HH:mm:ss");
                        String strTime=sdfTime.format(c1.getTime());
                        ChatBean bean1=new ChatBean();
                        bean1.setToNo("9111991293");
                        ArrayList texts=new ArrayList();
                        MessageBean msg1=new MessageBean();
                        msg1.setMessage("Hello..!! Welcome to Foodinger Chat and Order");
                        msg1.setDate(strDate);
                        msg1.setTime(strTime);
                        msg1.setSender(0);
                        texts.add(msg1);
                        bean1.setMessage(texts);
                        historyList.add(bean1);
                        chatHistoryAdapter.setItemArrayList(historyList);
                    }
                }
                @Override
                public void failure(RetrofitError error) {

                }
            });
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    private void updateDisplay(List<PojoChat> pojoChats) {
        try {
            System.out.println("List:" + pojoChats.toString() + "__Size:" + pojoChats.size());
            historyList = new ArrayList();
            for (int i = 0; i < pojoChats.size(); i++) {
                ChatBean bean = new ChatBean();
                bean.setToNo(pojoChats.get(i).getTo());
                ArrayList<PojoChat.ChatList> chats = pojoChats.get(i).getChat();
                ArrayList messages = new ArrayList();
                for (int j = 0; j < chats.size(); j++) {
                    MessageBean msg = new MessageBean();
                    msg.setMessage(chats.get(j).getMessage());
                    msg.setDate(chats.get(j).getMsg_date());
                    msg.setTime(chats.get(j).getMsg_time());
                    msg.setSender(chats.get(j).getSender());
                    messages.add(msg);
                }
                bean.setMessage(messages);
                historyList.add(bean);
            }
            chatHistoryAdapter.setItemArrayList(historyList);
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    public interface ApiInterface {
        @POST("/chat/send-cust-details.php")
        public void getChat(@Field("phoneNo") String phoneNo, @Field("macAddress") String macAddress, Callback<List<PojoChat>> response);
    }

    @Override
    public boolean onCreateOptionsMenu(Menu menu) {
        // Inflate the menu; this adds items to the action bar if it is present.
        getMenuInflater().inflate(R.menu.menu_main, menu);
        return true;
    }

    @Override
    public boolean onOptionsItemSelected(MenuItem item) {
        // Handle action bar item clicks here. The action bar will
        // automatically handle clicks on the Home/Up button, so long
        // as you specify a parent activity in AndroidManifest.xml.
        int id = item.getItemId();

        //noinspection SimplifiableIfStatement
        if (id == R.id.action_logout) {
            SharedPreferences.Editor editor = MainActivity.sharedPreferences.edit();
            editor.clear();
            editor.commit();
            Intent intent = new Intent(ChatHistory.this, MainActivity.class);
            ChatHistory.this.finish();
            startActivity(intent);
            return true;
        }

        return super.onOptionsItemSelected(item);
    }
}
